
//100% working


function solution(A) {
  // write your code in JavaScript (Node.js 8.9.4)

  var comulativetotal = 0;
  var min = Number.MAX_SAFE_INTEGER;

  var arrlen = A.length;
  var total = A.reduce((a, b) => {
    return a + b;
  });

  for (var i = 0; i < arrlen - 1; i++) {
    comulativetotal += A[i];
    var backward = comulativetotal;
    var forward = total - backward;
    var diff = Math.abs(backward - forward);
    if (diff < min) {
      min = diff;
    }
  }
  return min;
}
console.log(solution([3, 1, 2, 4, 3]));



Refined solution

function solution(A){
let arrlen= A.length;
let temp=[];

for(let i=1; i<arrlen; i++){

let forward=[];
let backward=[];
let forwardacc=0;
let backwardacc=0;

 forward= A.slice(i, arrlen);
 backward=A.slice(0, i);
forwardacc= forward.reduce((acc, curr)=>{return acc+ curr});
backwardacc= backward.reduce((acc, curr)=>{return acc+ curr});

temp.push(Math.abs(backwardacc-forwardacc));
}

temp.sort((a,b)=>{return a-b});

return  temp.shift();
}
