function solution(A){
var arrlen= A.length;
var temp;
var perm;

for(var i=1; i<arrlen; i++){
var forward=0;
var backward=0;
var check;
for(var j=0; j<arrlen; j++){
  if(A[i+j] <arrlen){
forward = forward + A[i+j];
  }

 if(i-(j+1)>=0){
  backward = backward + A[i-(j+1)];
}
}
temp= Math.abs(backward-forward);

if(perm===undefined){
  perm=temp;
}
  else if(perm>temp){
  perm=temp;
}
}
return  perm;
}




Refined solution

function solution(A){
let arrlen= A.length;
let temp=[];

for(let i=1; i<arrlen; i++){

let forward=[];
let backward=[];
let forwardacc=0;
let backwardacc=0;

 forward= A.slice(i, arrlen);
 backward=A.slice(0, i);
forwardacc= forward.reduce((acc, curr)=>{return acc+ curr});
backwardacc= backward.reduce((acc, curr)=>{return acc+ curr});

temp.push(Math.abs(backwardacc-forwardacc));
}

temp.sort();
return  temp.shift();
}

console.log(solution([3,6,8,4,-3]));
